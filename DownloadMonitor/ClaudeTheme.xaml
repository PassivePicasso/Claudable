<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:vm="clr-namespace:Claudable.ViewModels"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!-- Colors -->
    <Color x:Key="ClaudePrimaryColor">#1a1915</Color>
    <Color x:Key="ClaudeSecondaryColor">#2f2f2c</Color>
    <Color x:Key="ClaudeBackgroundColor">#2d2d2a</Color>
    <Color x:Key="ClaudeTextColor">#FFFFFF</Color>
    <Color x:Key="ClaudeBorderColor">#3e3e39</Color>
    <Color x:Key="ClaudeHighlightColor">#53524c</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="ClaudePrimaryBrush" Color="{StaticResource ClaudePrimaryColor}"/>
    <SolidColorBrush x:Key="ClaudeSecondaryBrush" Color="{StaticResource ClaudeSecondaryColor}"/>
    <SolidColorBrush x:Key="ClaudeBackgroundBrush" Color="{StaticResource ClaudeBackgroundColor}"/>
    <SolidColorBrush x:Key="ClaudeTextBrush" Color="{StaticResource ClaudeTextColor}"/>
    <SolidColorBrush x:Key="ClaudeBorderBrush" Color="{StaticResource ClaudeBorderColor}"/>
    <SolidColorBrush x:Key="ClaudeHighlightBrush" Color="{StaticResource ClaudeHighlightColor}"/>

    <!-- Fonts -->
    <FontFamily x:Key="ClaudeFont">Söhne, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, "Helvetica Neue", Arial</FontFamily>

    <!-- Base Style -->
    <Style x:Key="ClaudeBaseStyle">
        <Setter Property="Control.Background" Value="{StaticResource ClaudeBackgroundBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ClaudeTextBrush}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource ClaudeFont}"/>
        <Setter Property="Control.FontSize" Value="14"/>
    </Style>

    <!-- Button Style -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudePrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ClaudeHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox Style -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- ListBox Style -->
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- ListBoxItem Style -->
    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ClaudeHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TreeView Style -->
    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- TreeViewItem Style -->
    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Padding" Value="5,2"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ClaudeHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TabControl Style -->
    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- TabItem Style -->
    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}" Margin="0,0,8,1">
                        <Grid Margin="4,0,4,0">
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="10,5"/>
                            <Ellipse x:Name="Badge" Width="8" Height="8" Fill="{StaticResource ClaudeTextBrush}"
                                     HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-1,2,0,0"
                                     Visibility="{Binding HasChanges, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="0,0,4,0"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,2"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ClaudeHighlightBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ClaudeHighlightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- GridSplitter Style -->
    <Style TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="Width" Value="1"/>
    </Style>

    <!-- ProjectFolder Template -->
    <HierarchicalDataTemplate DataType="{x:Type vm:ProjectFolder}" ItemsSource="{Binding SubFolders}">
        <StackPanel Orientation="Horizontal">
            <Image Source="/Images/folder.png" Width="16" Height="16" Margin="0,0,5,0"/>
            <TextBlock Text="{Binding Name}" Foreground="{StaticResource ClaudeTextBrush}"/>
        </StackPanel>
    </HierarchicalDataTemplate>

    <!-- Window Style -->
    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource ClaudeBackgroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource ClaudeFont}"/>
    </Style>

    <!-- Flyout Panel Style -->
    <Style x:Key="FlyoutPanelStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ClaudePrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="CornerRadius" Value="0,12,12,0"/>
    </Style>

</ResourceDictionary>