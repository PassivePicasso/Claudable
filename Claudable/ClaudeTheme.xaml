<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:vm="clr-namespace:Claudable.ViewModels"
                    xmlns:models="clr-namespace:Claudable.Models"
                    xmlns:controls="clr-namespace:Claudable.Controls"
                    xmlns:converters="clr-namespace:Claudable.Converters"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:FileSizeConverter x:Key="FileSizeConverter" />
    <converters:SpeedConverter x:Key="SpeedConverter" />
    <converters:StatusToVisibilityConverter x:Key="StatusToVisibilityConverter"/>
    <converters:ChooseConverter x:Key="UploadOrDownload" True="↑" False="↓"/>
    <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>

    <!-- Colors -->
    <Color x:Key="ClaudePrimaryColor">#1a1915</Color>
    <Color x:Key="ClaudeSecondaryColor">#2f2f2c</Color>
    <Color x:Key="ClaudeBackgroundColor">#2d2d2a</Color>
    <Color x:Key="ClaudeTextColor">#ceccc5</Color>
    <Color x:Key="ClaudeBorderColor">#3e3e39</Color>
    <Color x:Key="ClaudeHighlightColor">#53524c</Color>
    <Color x:Key="ClaudeUpdateArtifactColor">#53724c</Color>
    <Color x:Key="ClaudeUpdateLocalColor">#73524c</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="ClaudePrimaryBrush" Color="{StaticResource ClaudePrimaryColor}"/>
    <SolidColorBrush x:Key="ClaudeSecondaryBrush" Color="{StaticResource ClaudeSecondaryColor}"/>
    <SolidColorBrush x:Key="ClaudeBackgroundBrush" Color="{StaticResource ClaudeBackgroundColor}"/>
    <SolidColorBrush x:Key="ClaudeTextBrush" Color="{StaticResource ClaudeTextColor}"/>
    <SolidColorBrush x:Key="ClaudeBorderBrush" Color="{StaticResource ClaudeBorderColor}"/>
    <SolidColorBrush x:Key="ClaudeHighlightBrush" Color="{StaticResource ClaudeHighlightColor}"/>
    <SolidColorBrush x:Key="ClaudeUpdateArtifactBrush" Color="{StaticResource ClaudeUpdateArtifactColor}"/>
    <SolidColorBrush x:Key="ClaudeUpdateLocalBrush" Color="{StaticResource ClaudeUpdateLocalColor}"/>

    <converters:BoolToSolidColorBrushConverter x:Key="BoolToColorConverter" 
                                               True="{StaticResource ClaudeUpdateArtifactBrush}" 
                                               False="{StaticResource ClaudeUpdateLocalBrush}" />

    <!-- Fonts -->
    <FontFamily x:Key="ClaudeFont">Söhne, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, "Helvetica Neue", Arial</FontFamily>

    <!-- Base Style -->
    <Style x:Key="ClaudeBaseStyle">
        <Setter Property="Control.Background" Value="{StaticResource ClaudeBackgroundBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ClaudeTextBrush}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource ClaudeFont}"/>
        <Setter Property="Control.FontSize" Value="14"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>

    <!-- Button Style -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudePrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ClaudeHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ToggleButton Style -->
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudePrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ClaudeHighlightBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ClaudeUpdateLocalBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ClaudeHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox Style -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- ListBox Style -->
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- ListBoxItem Style -->
    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ClaudeHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TreeView Style -->
    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- TreeViewItem Style -->
    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- TabControl Style -->
    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- TabItem Style -->
    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}" Margin="0,0,8,1">
                        <Grid Margin="4,0,4,0">
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="10,5"/>
                            <!--<Ellipse x:Name="Badge" Width="8" Height="8" Fill="{StaticResource ClaudeTextBrush}"
                                     HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-1,2,0,0"
                                     Visibility="{Binding HasChanges, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="0,0,4,0"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,2"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ClaudeHighlightBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ClaudeHighlightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- GridSplitter Style -->
    <Style TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource ClaudeBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ClaudeBorderBrush}"/>
    </Style>

    <!-- Window Style -->
    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource ClaudeBackgroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource ClaudeFont}"/>
    </Style>

    <!-- Flyout Panel Style -->
    <Style x:Key="FlyoutPanelStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ClaudePrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClaudeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="CornerRadius" Value="0,12,12,0"/>
    </Style>

    <Style x:Key="SmallButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="5,-2,5,2"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Title Bar Button Style -->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="46"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource ClaudeTextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource ClaudeFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ClaudeHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <DataTemplate DataType="{x:Type models:DownloadItem}">
        <Border BorderBrush="{StaticResource ClaudeBorderBrush}" BorderThickness="0,0,0,1" Padding="10,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                    <controls:FileSystemIcon Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" 
                                         Width="16" Height="16" Margin="0,0,10,0"
                                         Path="{Binding Path=Path}"/>
                    <TextBlock 
                           Text="{Binding Path}" 
                           FontWeight="Bold" 
                           TextTrimming="CharacterEllipsis"/>
                </StackPanel>

                <!-- Download Progress -->
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="2">
                    <ProgressBar Value="{Binding Progress, Mode=OneWay}" 
                                 Background="{StaticResource ClaudeBackgroundBrush}"
                                 Foreground="{StaticResource ClaudeHighlightBrush}"
                                 Maximum="100" 
                                 Height="14"/>
                    <TextBlock Text="{Binding Progress, Mode=OneWay, StringFormat={}{0}%}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="10"/>
                </Grid>

                <!-- Download Status -->
                <TextBlock Grid.Row="1" Grid.Column="2" 
                       Text="{Binding Status}" 
                       FontStyle="Italic"
                       HorizontalAlignment="Right"
                           Margin="0,-1,10,0"/>

                <!-- Cancel Button -->
                <Button Grid.Row="0" Grid.Column="2" 
                    Content="Cancel" 
                    Command="{Binding DataContext.CancelDownloadCommand, 
                              RelativeSource={RelativeSource AncestorType=ListBox}}"
                    CommandParameter="{Binding}"
                    Visibility="{Binding Status, Converter={StaticResource StatusToVisibilityConverter}}"
                    Style="{StaticResource SmallButtonStyle}"/>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ArtifactViewModel}" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="{StaticResource ClaudeBorderBrush}" 
                    Background="{StaticResource ClaudeBackgroundBrush}"
                    BorderThickness="2,2,0,2" CornerRadius="8,0,0,8" 
                    Padding="4,0,8,0" Margin="0,0,-2,5">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Filename:"     HorizontalAlignment="Right"/>
                    <TextBlock Text="Created at:"   HorizontalAlignment="Right"/>
                    <TextBlock Text="Project UUID:" HorizontalAlignment="Right"/>
                    <TextBlock Text="File UUID:"    HorizontalAlignment="Right"/>
                </StackPanel>
            </Border>
            <Border Grid.Column="1"
                    BorderBrush="{StaticResource ClaudeBorderBrush}" 
                    Background="{StaticResource ClaudeBorderBrush}"
                    BorderThickness="1,1,0,1" CornerRadius="0,8,8,0" 
                    Padding="8,2,8,2" Margin="-2,0,0,5">
                <StackPanel Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Stretch">
                    <TextBlock Text="{Binding Path=FileName, Mode=OneWay}"/>
                    <TextBlock Text="{Binding Path=CreatedAt, Mode=OneWay}"/>
                    <TextBlock Text="{Binding Path=ProjectUuid, Mode=OneWay}"/>
                    <TextBlock Text="{Binding Path=Uuid, Mode=OneWay}"/>
                </StackPanel>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- ProjectFolder Template -->
    <HierarchicalDataTemplate DataType="{x:Type vm:ProjectFolder}" ItemsSource="{Binding FilteredChildren}">
        <HierarchicalDataTemplate.ItemContainerStyle>
            <Style TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            </Style>
        </HierarchicalDataTemplate.ItemContainerStyle>
        <StackPanel Orientation="Horizontal" MinHeight="20">
            <controls:FileSystemIcon Path="{Binding FullPath}" Width="16" Height="16" Margin="0,0,5,0"/>
            <TextBlock Text="{Binding Name}" Foreground="{StaticResource ClaudeTextBrush}"/>
        </StackPanel>
    </HierarchicalDataTemplate>

    <!-- Project File Item Template -->
    <DataTemplate DataType="{x:Type vm:ProjectFile}">
        <Grid Margin="2" Height="20" HorizontalAlignment="Stretch" Grid.IsSharedSizeScope="True" 
          Background="Transparent" >
            <Grid.ToolTip>
                <StackPanel Orientation="Vertical" Margin="2">
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Text="   Local: " FontSize="10" Foreground="{StaticResource ClaudeSecondaryBrush}"/>
                        <TextBlock Text="{Binding LocalLastModified, StringFormat={}{0:g}}" FontSize="10" 
                             Foreground="{StaticResource ClaudeSecondaryBrush}" Margin="0,0,10,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Text="Artifact: " FontSize="10" Foreground="{StaticResource ClaudeSecondaryBrush}"/>
                        <TextBlock Text="{Binding ArtifactLastModified, StringFormat={}{0:g}}" FontSize="10" 
                             Foreground="{StaticResource ClaudeSecondaryBrush}"/>
                    </StackPanel>
                </StackPanel>
            </Grid.ToolTip>
            <Grid.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" 
                          Command="{Binding DataContext.DoubleClickTrackedArtifactCommand, 
                                    RelativeSource={RelativeSource AncestorType=Window}}"
                          CommandParameter="{Binding}"/>
            </Grid.InputBindings>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="SyncState"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Status"/>
                <ColumnDefinition Width="*" MinWidth="200" SharedSizeGroup="FileName"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="TrackButton"/>
            </Grid.ColumnDefinitions>
            
            <controls:FileSystemIcon Grid.Column="2" Path="{Binding FullPath}" Width="16" Height="16"/>

            <TextBlock Grid.Column="3" Text="{Binding Name}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

            <Border Grid.Column="0" Grid.ColumnSpan="2" Width="34"/>

            <Border Grid.Column="0" CornerRadius="4" Width="16" Height="16"
                Background="{Binding IsLocalNewer, Converter={StaticResource BoolToColorConverter}}"
                Visibility="{Binding IsTrackedAsArtifact, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="{Binding IsLocalNewer, Converter={StaticResource UploadOrDownload}}" 
                       FontSize="16" Foreground="{StaticResource ClaudeTextBrush}" 
                       Margin="0,-4,0,0"
                       HorizontalAlignment="Center"/>
            </Border>
            <Border Grid.Column="1" CornerRadius="4" Width="16"  Height="16"
                Background="{StaticResource ClaudeHighlightBrush}"
                Visibility="{Binding IsTrackedAsArtifact, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="A" FontSize="10" Foreground="{StaticResource ClaudeTextBrush}" HorizontalAlignment="Center"/>
            </Border>

            <!-- Track Button -->
            <Button Grid.Column="4" Content="Track" 
                Command="{Binding TrackArtifactCommand}"
                Visibility="{Binding IsTrackedAsArtifact, 
                           Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                Style="{StaticResource SmallButtonStyle}"
                Margin="0,0,4,0"/>

            <!-- Untrack Button -->
            <Button Grid.Column="4" Content="Untrack" 
                Command="{Binding UntrackArtifactCommand}"
                Visibility="{Binding IsTrackedAsArtifact, 
                           Converter={StaticResource BooleanToVisibilityConverter}}"
                Style="{StaticResource SmallButtonStyle}"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>